========================================================================================================================
基础
========================================================================================================================


------------------------------------------------------------------------------------------------------------------------
高并发系统设计 的三种通用方法：

    1、Scale-out（扩展）
        数据库一主多从、分库分表、存储分片

    2、缓存

        整个计算机体系中  ->  磁盘是最慢的一环

    3、异步

        调用方法执行完毕后，再通过  回调、事件通知 等方式   ->   将结果 反馈给调用方

        场景：
            12306  ->   查询余票、下单、退票

            1、接收请求 ==> 先返回suc（告知用户请求成功，系统正在后台处理）

            2、后台处理成功后   ==>   微信/短信/邮箱/站内信 通知用户    或    用户自己刷新页面 获取异步处理结果


------------------------------------------------------------------------------------------------------------------------
架构分层


应用：
    OSI网络模型  七层
    TCP/IP协议   四层
    Linux 文件系统


好处：
    1、简化系统设计   ->   让不同的人专注做某一层次的事情
    2、高复用
    3、横向扩展


缺点：
    复杂度



------------------------------------------------------------------------------------------------------------------------
如何提升系统性能


三高：
    高并发、高性能、高可用


高并发系统设计的 三大目标：

    高性能、高可用、可扩展

