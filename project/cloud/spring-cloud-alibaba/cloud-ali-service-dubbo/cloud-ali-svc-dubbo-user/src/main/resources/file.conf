## Seata 配置文件

#### 该配置用于指定TC的相关属性；如果使用注册中心(nacos、zk...)也可以将配置添加到配置中心


# transport
transport {

  # tcp udt unix-domain-socket
  type = "TCP"

  # NIO NATIVE
  server = "NIO"

  # enable heartbeat
  heartbeat = true

  # thread factory for netty
  thread-factory {

    boss-thread-prefix = "NettyBoss"
    worker-thread-prefix = "NettyServerNIOWorker"
    server-executor-thread-prefix = "NettyServerBizHandler"
    share-boss-worker = false
    client-selector-thread-prefix = "NettyClientSelector"
    client-selector-thread-size = 1
    client-worker-thread-prefix = "NettyClientWorkerThread"

    # netty boss thread size,will not be used for UDT
    boss-thread-size = 1

    # auto default pin or 8
    worker-thread-size = 8
  }

  # shutdown
  shutdown {
    # when destroy server, wait seconds
    wait = 3
  }

  serialization = "seata"

  compressor = "none"
}


# service
service {

  # vgroup -> rgroup
  ##
  ## service.vgroup_mapping.xx-tx-service-group
  ## xx-tx-service-group：默认 ${spring.application.name}-fescar-service-group
  ##
  ## 需要注意的是 service.vgroup_mapping.xxx 这个配置，xxx 在 Spring Cloud 中默认是${spring.application.name}-fescar-service-group，
  ## 可以通过指定application.properties的 spring.cloud.alibaba.seata.tx-service-group这个属性覆盖，
  ## 但是必须要和 file.conf 中的一致，否则会提示 no available server to connect
  ##
  vgroup_mapping.cloud-ali-svc-dubbo-user-fescar-service-group = "default"

  # only support single node
  default.grouplist = "127.0.0.1:8091"

  # degrade current not support
  enableDegrade = false

  # disable
  disable = false

  # unit ms,s,m,h,d represents milliseconds, seconds, minutes, hours, days, default permanent
  max.commit.retry.timeout = "-1"
  max.rollback.retry.timeout = "-1"
}


# client
client {

  async.commit.buffer.limit = 10000

  lock {
    retry.internal = 10
    retry.times = 30
  }

  report.retry.count = 5
}


## transaction log store
store {

  ## store mode: file、db
  mode = "file"

  ## file store
  file {

    dir = "sessionStore"

    # branch session size , if exceeded first try compress lockkey, still exceeded throws exceptions
    max-branch-session-size = 16384

    # globe session size , if exceeded throws exceptions
    max-global-session-size = 512

    # file buffer size , if exceeded allocate new buffer
    file-write-buffer-cache-size = 16384

    # when recover batch read size
    session.reload.read_size = 100

    # async, sync
    flush-disk-mode = async
  }

  ## database store
  db {

    ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc.
    datasource = "dbcp"

    ## mysql/oracle/h2/oceanbase etc.
    db-type = "mysql"

    url = "jdbc:mysql://127.0.0.1:3306/seata"
    user = "mysql"
    password = "mysql"

    min-conn = 1
    max-conn = 3
    global.table = "global_table"
    branch.table = "branch_table"
    lock-table = "lock_table"
    query-limit = 100
  }
}


# lock
lock {
  ## the lock store mode: local、remote
  mode = "remote"

  local {
    ## store locks in user's database
  }

  remote {
    ## store locks in the seata's server
  }
}


# recovery
recovery {
  committing-retry-delay = 30
  asyn-committing-retry-delay = 30
  rollbacking-retry-delay = 30
  timeout-retry-delay = 30
}


# transaction
transaction {
  undo.data.validation = true
  undo.log.serialization = "jackson"
}


# metrics settings
metrics {

  enabled = false

  registry-type = "compact"

  # multi exporters use comma divided
  exporter-list = "prometheus"

  exporter-prometheus-port = 9898
}
