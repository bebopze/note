1、static

    static的本质是不依赖对象（this）

    用法：
        不想创建对象的情况下，调用某个方法          ->  static fun()

        不想创建对象的情况下，初始化某个成员变量     ->  static field


2、你有没有发现，在数据量比较小的情况下，
    Redis 中的很多数据类型，比如字典、有序集合等，都是通过多种数据结构来实现的，为什么会这样设计呢？
    用一种固定的数据结构来实现，不是更加简单吗？

    redis的数据结构由多种数据结构来实现，主要是出于时间和空间的考虑，当数据量小的时候通过数组下标访问最快、占用内存最小，而压缩列表只是数组的升级版；
    因为数组需要占用连续的内存空间，所以当数据量大的时候，就需要使用链表了，同时为了保证速度又需要和数组结合，也就有了散列表。
    对于数据的大小和多少采用哪种数据结构，相信redis团队一定是根据大多数的开发场景而定的。



3、我们讲到数据结构持久化有两种方法。对于二叉查找树这种数据结构，我们如何将它持久化到磁盘中呢？

    二叉查找树的存储，
    我倾向于存储方式一，通过填充叶子节点形成完全二叉树，然后以数组的形式存储到硬盘，数据还原过程也是非常高效的。
    如果用存储方式二就比较复杂了。
